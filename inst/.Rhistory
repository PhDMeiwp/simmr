points(sa$age[sa$chd==1],sa$tobacco[sa$chd==1],col='blue')
plot(sa$age,sa$obesity,xlab='Age',ylab='Obesity score',main='Scatter plot of age vs obesity score',type='n')
points(sa$age[sa$chd==0],sa$obesity[sa$chd==0],col='red')
points(sa$age[sa$chd==1],sa$obesity[sa$chd==1],col='blue')
plot(sa$obesity,sa$tobacco,xlab='Obesity score',ylab='Tobacco (kg)',main='Scatter plot of obesity score vs tobacco consumption',type='n')
points(sa$obesity[sa$chd==0],sa$tobacco[sa$chd==0],col='red')
points(sa$obesity[sa$chd==1],sa$tobacco[sa$chd==1],col='blue')
boxplot(sa$age ~ sa$chd,xlab=c('chd (1=yes)'),ylab='Age (years)',main='Boxplot of age vs chd',col=c('red','blue'))
head(sa)
pairs(sa[,c('ldl','tobacco','age','alcohol')])
?pch
data = read.table('https://docs.google.com/spreadsheets/d/1W997aF4COPOfyV2tpPJWRg938FnpDK86oQacB0IkTqY/pubhtml?gid=476566518&single=true')
data = read.csv('https://docs.google.com/spreadsheets/d/1W997aF4COPOfyV2tpPJWRg938FnpDK86oQacB0IkTqY/export?gid=0&format=csv')
data = read.csv('https://docs.google.com/spreadsheets/d/1W997aF4COPOfyV2tpPJWRg938FnpDK86oQacB0IkTqY/export?format=csv&id=1W997aF4COPOfyV2tpPJWRg938FnpDK86oQacB0IkTqY')
data = read.table('https://docs.google.com/spreadsheets/d/1W997aF4COPOfyV2tpPJWRg938FnpDK86oQacB0IkTqY/pubhtml?gid=476566518&single=true'')
data = read.table('https://docs.google.com/spreadsheets/d/1W997aF4COPOfyV2tpPJWRg938FnpDK86oQacB0IkTqY/pubhtml?gid=476566518&single=true')
data = read.table('https://docs.google.com/spreadsheets/d/1W997aF4COPOfyV2tpPJWRg938FnpDK86oQacB0IkTqY/pubhtml?gid=476566518&single=true')
data = read.csv('https://docs.google.com/spreadsheets/d/1W997aF4COPOfyV2tpPJWRg938FnpDK86oQacB0IkTqY/export?format=csv&id')
data = read.csv('https://docs.google.com/spreadsheets/d/1W997aF4COPOfyV2tpPJWRg938FnpDK86oQacB0IkTqY/export?format=csv')
data = read.csv('https://docs.google.com/spreadsheets/d/1W997aF4COPOfyV2tpPJWRg938FnpDK86oQacB0IkTqY/?format=csv')
data = read.csv('~/Dropbox/Teaching/PS/Labs/R/STAT10050_data.csv')
data = read.csv('~/Dropbox/Teaching/PS/Labs/R/Lab7/STAT10050_data.csv')
head(data)
data = read.csv('~/Dropbox/Teaching/PS/Labs/R/Lab7/STAT10050_data.csv')
head(data)
hist(data$Number)
barplot(data$Number)
table(data$Number)
barplot(table(data$Number))
barplot(table(data$Number),xlab='Chosen number between 1 and 10',ylab='Frequency'main='Bar chart of chosen numbers between 1 and 10')
barplot(table(data$Number),xlab='Chosen number between 1 and 10',ylab='Frequency',main='Bar chart of chosen numbers between 1 and 10')
summary(data$height)
hist(data$height)
hist(data$height,breaks=30)
hist(data$height,breaks=20)
boxplot(data$height ~ data$sex)
sample(data$height,size=10)
samp = sample(data$height,size=10)
mean(samp)
dim(data)
sample_means = rep(0,1000)
for(i in 1:1000) {
sample_means[i] = mean(sample(data$height,size=10))
}
hist(sample_means,breaks=20)
sample_means = rep(0,1000)
for(i in 1:1000) {
sample_means[i] = mean(sample(data$height,size=20))
}
hist(sample_means,breaks=20)
abline(v=mean(data$height),col='red')
abline(v=mean(data$height),col='red',lwd=3)
sd(sample_means)
sd(data$height)
sd(data$height)/sqrt(10)
sample_means = rep(0,1000)
for(i in 1:1000) {
sample_means[i] = mean(sample(data$height,size=10))
}
hist(sample_means,breaks=20)
abline(v=mean(data$height),col='red',lwd=3)
sd(sample_means) # Standard deviation of sample means
sd(data$height) # Population standard deviation
sd(data$height)/sqrt(10) #
head(data)
hist(data$Handedness,breaks=30)
hist(data$Handedness,breaks=20)
sample_means = rep(0,10000)
for(i in 1:10000) {
sample_means[i] = mean(sample(data$Handedness,size=10))
}
hist(sample_means,breaks=20)
sample_means = rep(0,10000)
for(i in 1:10000) {
sample_means[i] = mean(sample(data$Handedness,size=30))
}
hist(sample_means,breaks=20)
abline(v=mean(data$Handedness),col='red',lwd=3)
sd(data$Handedness) # Population standard deviation
sd(sample_means) # Standard deviation of sample means
sd(data$Handedness)/sqrt(30) # Theoretical standard error for samples of size 10
table(data$SorQ)
table(data$SorQ)
S = rep(0,length(data$SorQ))
S[data$SorQ=='S'] = 1
mean(S)
mean(S)
sample_means = rep(0,1000)
for(i in 1:1000) {
sample_means[i] = mean(sample(S,size=20))
}
hist(sample_means,breaks=20)
abline(v=mean(S),col='red',lwd=3)
mean(S)
sample_means = rep(0,10000)
for(i in 1:10000) {
sample_means[i] = mean(sample(S,size=20))
}
hist(sample_means,breaks=20)
abline(v=mean(S),col='red',lwd=3)
head(data)
mean(data$FastestCar)
sd(data$height)
load("/Volumes/Untitled/MeetingS_UCD/Meeting_12_Nov_2014/Modern_Data/DATA_Climatic_Reconstruction_1core_1geochemicalelemnt_Cimera_Lake.RData")
ls()
names_newsort<-as.vector(NULL)
matrix_NAOann_XRF_1930_2013_no2010<-matrix_NAOann_XRF_1930_2013[-81,]#Remove data of 2010 yr due to wierd NAO
matrix_NAOann_XRF_1930_2013_noNAN=na.omit(matrix_NAOann_XRF_1930_2013_no2010);
xrf=matrix_NAOann_XRF_1930_2013_noNAN[,3:ncol(matrix_NAOann_XRF_1930_2013_noNAN)];
#Rounding the data because gamma distribution is for count data. Y al intrpolar para que coincidan con anyos NAO tienen decimales
xrf<-round(xrf)
NAO=matrix_NAOann_XRF_1930_2013_noNAN[,2];
names_newsort<-as.vector(NULL)
matrix_NAOann_XRF_1930_2013_no2010<-matrix_NAOann_XRF_1930_2013[-81,]#Remove data of 2010 yr due to wierd NAO
matrix_NAOann_XRF_1930_2013_noNAN=na.omit(matrix_NAOann_XRF_1930_2013_no2010);
xrf=matrix_NAOann_XRF_1930_2013_noNAN[,3:ncol(matrix_NAOann_XRF_1930_2013_noNAN)];
#Rounding the data because gamma distribution is for count data. Y al intrpolar para que coincidan con anyos NAO tienen decimales
xrf<-round(xrf)
NAO=matrix_NAOann_XRF_1930_2013_noNAN[,2];
ls()
head(matrix_NAOs_XRF_1930_2013)
matrix_NAOann_XRF_1930_2013_no2010<-matrix_NAOs_XRF_1930_2013[-81,c(1,2,4:13)]#Remove data of 2010 yr due to wierd NAO
ncol(matrix_NAOs_XRF_1930_2013)
matrix_NAOann_XRF_1930_2013_no2010<-matrix_NAOs_XRF_1930_2013[-81,c(1,2,4:16)]#Remove data of 2010 yr due to wierd NAO
matrix_NAOann_XRF_1930_2013_noNAN=na.omit(matrix_NAOann_XRF_1930_2013_no2010);
xrf=matrix_NAOann_XRF_1930_2013_noNAN[,3:ncol(matrix_NAOann_XRF_1930_2013_noNAN)];
head(xrf)
data=list(N.rows = nrow(xrf), N.cols=ncol(xrf),N.rows_f=nrow(xrf_f),N.cols_f=ncol(xrf_f),xrf=xrf,NAO=NAO,xrf_f=xrf_f,time=time)
xrf_f<-XRF_data_CIM12_04A_Age_Dyn_rev[1:585,3:ncol(XRF_data_CIM12_04A_Age_Dyn_rev)]
time = XRF_data_CIM12_04A_Age_Dyn_rev[1:585,2]
data=list(N.rows = nrow(xrf), N.cols=ncol(xrf),N.rows_f=nrow(xrf_f),N.cols_f=ncol(xrf_f),xrf=xrf,NAO=NAO,xrf_f=xrf_f,time=time)
NAO=matrix_NAOann_XRF_1930_2013_noNAN[,2];
data=list(N.rows = nrow(xrf), N.cols=ncol(xrf),N.rows_f=nrow(xrf_f),N.cols_f=ncol(xrf_f),xrf=xrf,NAO=NAO,xrf_f=xrf_f,time=time)
str(data)
plot(data$NAO,data$xrf[,1])
range(data$xrf_f[,1])
plot(data$NAO,data$xrf[,1],ylim=range(data$xrf_f[,1]))
abline(h=data$xrf_f[,1],col='red',lty='dotted')
head(xrf)
x = rbinom(100,1,0.5)
x
HTH = rep(0,1000)
HTT = rep(0,1000)
for(i in 1:1000) {
x = rbinom(100,1,0.5)
for(j in 98:1) {
if(all(x[j:(j+2)]==c(1,0,1))) HTH[i] = j
if(all(x[j:(j+2)]==c(0,1,1))) HTT[i] = j
}
}
mean(HTH)
mean(HTT)
range(HTH)
range(HTT)
HTH = rep(0,1000)
HTT = rep(0,1000)
for(i in 1:1000) {
x = rbinom(100,1,0.5)
for(j in 98:1) {
if(all(x[j:(j+2)]==c(1,0,1))) HTH[i] = j+2
if(all(x[j:(j+2)]==c(0,1,1))) HTT[i] = j+2
}
}
mean(HTH)
mean(HTT)
HTH = rep(0,1000)
HTT = rep(0,1000)
for(i in 1:1000) {
x = rbinom(100,1,0.5)
for(j in 98:1) {
if(all(x[j:(j+2)]==c(1,0,1))) HTH[i] = j+2
if(all(x[j:(j+2)]==c(1,0,0))) HTT[i] = j+2
}
}
mean(HTH)
mean(HTT)
sd(HTH)
sd(HTT)
HTH = rep(0,1000)
HTT = rep(0,1000)
HHT = rep(0,1000)
for(i in 1:1000) {
x = rbinom(100,1,0.5)
for(j in 98:1) {
if(all(x[j:(j+2)]==c(1,0,1))) HTH[i] = j+2
if(all(x[j:(j+2)]==c(1,0,0))) HTT[i] = j+2
if(all(x[j:(j+2)]==c(1,1,0))) HHT[i] = j+2
}
}
mean(HTH)
mean(HTT)
mean(HHT)
1-pnorm(7,5,4)
pnorm(1,-1,2)-pnorm(-1,-1,2)
pbinom(5,7,0.2)-pnorm(1,7,0.2)
pbinom(3,7,0.2)-pnorm(1,7,0.2)
pbinom(3,7,0.2)-pnorm(1,7,0.2)
pbinom(3,7,0.2)-pbinom(1,7,0.2)
qnorm(0.9)
qt(0.95,df=6)
qnorm(0.995)
qt(0.975,24)
qt(0.975,80)
qt(0.95,37)
s1 = 321; s2 =245; n1 = 23; n2 = 25; v1 = 321^2/23; v2 = 245^2/25
(v1+v2)^2 / (V1^2/22 + V2^2/24)
(v1+v2)^2 / (v1^2/22 + v2^2/24)
qt(0.975,41)
sqrt(v1+v2)
357- 2.020*82.952
357+ 2.020*82.952
qt(0.995,326)
sqrt(0.0499*(1-0.0499)/2609)
sqrt(0.0675*(1-0.0675)/3216)
2*sqrt(0.0675*(1-0.0675)/3216)
2*sqrt(0.0499*(1-0.0499)/2609)
Rcpp::sourceCpp('Desktop/test.cpp')
timesTwo(4)
Rcpp::sourceCpp('Desktop/test.cpp')
timeThree(4)
timesThree(4)
Rcpp::sourceCpp('Desktop/test.cpp')
Rcpp::sourceCpp('Desktop/test.cpp')
Rcpp::sourceCpp('Desktop/test.cpp')
Rcpp::sourceCpp('Desktop/test.cpp')
Rcpp::sourceCpp('Desktop/test.cpp')
install.packages('RcppArmadillo')
Rcpp::sourceCpp('Desktop/test.cpp')
Rcpp::sourceCpp('Desktop/test.cpp')
Rcpp::sourceCpp('Desktop/test.cpp')
Rcpp::sourceCpp('Desktop/test.cpp')
getEigenValues(diag(4))
source('~/Dropbox/Rfiles/Sandbox/SMS_graph/plot.R')
df
df = data.frame(UCD,NUIM,McMaster,NUIG,DCU,Nottingham,Simon_Fraser,UCC,UL,Helsinki,Newcastle,TCD,Durham)
df2 = melt(df)
df2
df = data.frame(years,UCD,NUIM,McMaster,NUIG,DCU,Nottingham,Simon_Fraser,UCC,UL,Helsinki,Newcastle,TCD,Durham)
df2 = melt(df)
df2
df2 = melt(df,id=years)
df2 = melt(df,id=df$years)
df$years
?melt
df2 = melt(df,id.vars=df$years)
df2 = melt(df,id.vars=years)
df = data.frame(UCD,NUIM,McMaster,NUIG,DCU,Nottingham,Simon_Fraser,UCC,UL,Helsinki,Newcastle,TCD,Durham)
df2 = melt(df,id.vars=years)
df = data.frame(years,UCD,NUIM,McMaster,NUIG,DCU,Nottingham,Simon_Fraser,UCC,UL,Helsinki,Newcastle,TCD,Durham)
df2 = melt(df)
df2
df = data.frame(years,UCD,NUIM,McMaster,NUIG,DCU,Nottingham,Simon_Fraser,UCC,UL,Helsinki,Newcastle,TCD,Durham)
df2 = melt(df,measure.vars=years)
df2
df2 = melt(data=df,measure.vars=years)
years
df2 = melt(data=df,id=years)
df2 = melt(data=df,id=years,measure=years)
df2 = melt(data=df,id='years')
df2
ggplot(df2,aes(x=years,y=value))+geom_line()
ggplot(df2,aes(x=years,y=value,group=variable))+geom_line()
ggplot(df2,aes(x=years,y=value,colour=variable))+geom_line()
colnames(df2) = c('Year','Insitution','Impact')
ggplot(df2,aes(x=years,y=value,colour=variable))+geom_line()
ggplot(df2,aes(x=Year,y=Impact,colour=Insitution))+geom_line()
ggplot(df2,aes(x=Year,y=Impact,colour=Insitution))+geom_line()+theme_bw()
?scale
x = matrix(rnorm(100),10,10)
scale(x)
ans=scale(x)
ans
y = matrix(rnorm(100,10),10,10)
y
ans = scale(x)
ans
attributes(ans)
ans$'scaled:center'
str(ans)
attributes(ans)[2]
attributes(ans)[2][1]
x = matrix(rnorm(500),50,10)
y = matrix(rnorm(500,10),50,10)
x_means = colMeans(x)
x_sd = apply(x,2,'sd')
x_means
x_sd
scale_x = sweep(x,2,'-',x_means)
?sweep
scale_x = sweep(x,2,x_means,'-')
scale_x = sweep(sweep(x,2,x_means,'-'),2,x_sd,'/')
scale_x
scale_y = sweep(sweep(y,2,x_means,'-'),2,x_sd,'/')
scale_Y
scale_y
M = rgamma(100)
M = rgamma(100,1,1)
M_prime = (M-0.01)/(10-0.01)
plot(M,M_prime)
max (M)
M_prime = (M-0.01)/(6-0.01)
sqrtm
??'sqrtm'
qnorm(0.995)
sqrt((0.27*(1-0.27)/102)+(0.24*(1-0.24))/73)
0.03-2.575*sqrt((0.27*(1-0.27)/102)+(0.24*(1-0.24))/73)
0.03+2.575*sqrt((0.27*(1-0.27)/102)+(0.24*(1-0.24))/73)
134/190
library(ggplot2)
library(lattice)
library(rgl)
ggplot(iris,aes(x=Sepal.Length,y=Petal.Length,color=Species))+geom_point()+theme_bw()+theme(text=element_text(size=20))+axis.text.x = element_text(angle=90, vjust=1))
ggplot(iris,aes(x=Sepal.Length,y=Petal.Length,color=Species))+geom_point()+theme_bw()+theme(text=element_text(size=20,axis.text.y = element_text(angle=90, vjust=1))
ggplot(iris,aes(x=Sepal.Length,y=Petal.Length,color=Species))+geom_point()+theme_bw()+theme(text=element_text(size=20),axis.text.y = element_text(angle=90, vjust=1))
ggplot(iris,aes(x=Sepal.Length,y=Petal.Length,color=Species))+geom_point()+theme_bw()
ggplot(iris,aes(x=Sepal.Length,y=Petal.Length,color=Species))+geom_point()+theme_bw()+theme(text=element_text(size=20),axis.text.y=element_text(angle=90,vjust=1))
ggplot(iris,aes(x=Sepal.Length,y=Petal.Length,color=Species))+geom_point()+theme_bw()+theme(text=element_text(size=20),axis.label.y=element_text(angle=90,vjust=1))
?theme
ggplot(iris,aes(x=Sepal.Length,y=Petal.Length,color=Species))+geom_point()+theme_bw()+theme(text=element_text(size=20))
wireframe(volcano, shade = TRUE,xlab='Latitude',ylab='Longitude',zlab='Altitude',aspect = c(61/87, 0.4),screen = list(z = -120, x = -45),light.source = c(0,0,10), distance = .2,shade.colors.palette = function(irr, ref, height, w = .5) grey(w * irr + (1 - w) * (1 - (1-ref)^.4)))
rgl.demo.bivar <- function()
{
require(MASS);
# parameters:
n<-50; ngrid<-40
# generate samples:
set.seed(31415)
x<-rnorm(n); y<-rnorm(n)
# estimate non-parameteric density surface via kernel smoothing
denobj<-kde2d(x, y, n=ngrid)
den.z <-denobj$z
# generate parametric density surface of a bivariate normal distribution
xgrid <- denobj$x
ygrid <- denobj$y
bi.z <- dnorm(xgrid)%*%t(dnorm(ygrid))
# visualize:
zscale<-20
# New window
open3d()
# clear scene:
clear3d("all")
# setup env:
bg3d(color="#887777")
light3d()
# Draws the simulated data as spheres on the baseline
spheres3d(x,y,rep(0,n),radius=0.1,color="#CCCCFF")
# Draws non-parametric density
surface3d(xgrid,ygrid,den.z*zscale,color="#FF2222",alpha=0.5)
# Draws parametric density
surface3d(xgrid,ygrid,bi.z*zscale,color="#CCCCFF",front="lines")
}
rgl.demo.bivar()
library(ggplot2)
library(lattice)
library(rgl)
library(ggplot2)
library(lattice)
library(rgl)
rgl.demo.bivar <- function()
{
require(MASS);
# parameters:
n<-50; ngrid<-40
# generate samples:
set.seed(31415)
x<-rnorm(n); y<-rnorm(n)
# estimate non-parameteric density surface via kernel smoothing
denobj<-kde2d(x, y, n=ngrid)
den.z <-denobj$z
# generate parametric density surface of a bivariate normal distribution
xgrid <- denobj$x
ygrid <- denobj$y
bi.z <- dnorm(xgrid)%*%t(dnorm(ygrid))
# visualize:
zscale<-20
# New window
open3d()
# clear scene:
clear3d("all")
# setup env:
bg3d(color="#887777")
light3d()
# Draws the simulated data as spheres on the baseline
spheres3d(x,y,rep(0,n),radius=0.1,color="#CCCCFF")
# Draws non-parametric density
surface3d(xgrid,ygrid,den.z*zscale,color="#FF2222",alpha=0.5)
# Draws parametric density
surface3d(xgrid,ygrid,bi.z*zscale,color="#CCCCFF",front="lines")
}
rgl.demo.bivar()
rgl.demo.bivar <- function()
{
require(MASS);
# parameters:
n<-50; ngrid<-40
# generate samples:
set.seed(31415)
x<-rnorm(n); y<-rnorm(n)
# estimate non-parameteric density surface via kernel smoothing
denobj<-kde2d(x, y, n=ngrid)
den.z <-denobj$z
# generate parametric density surface of a bivariate normal distribution
xgrid <- denobj$x
ygrid <- denobj$y
bi.z <- dnorm(xgrid)%*%t(dnorm(ygrid))
# visualize:
zscale<-20
# New window
open3d()
# clear scene:
clear3d("all")
# setup env:
bg3d(color="#887777")
light3d()
# Draws the simulated data as spheres on the baseline
spheres3d(x,y,rep(0,n),radius=0.1,color="#CCCCFF")
# Draws non-parametric density
surface3d(xgrid,ygrid,den.z*zscale,color="#FF2222",alpha=0.5)
# Draws parametric density
surface3d(xgrid,ygrid,bi.z*zscale,color="#CCCCFF",front="lines")
}
rgl.demo.bivar()
library(ggplot2)
library(lattice)
library(rgl)
# ggplot
ggplot(iris,aes(x=Sepal.Length,y=Petal.Length,color=Species))+geom_point()+theme_bw()+theme(text=element_text(size=20))
library(ggplot2)
library(lattice)
library(rgl)
# ggplot
ggplot(iris,aes(x=Sepal.Length,y=Petal.Length,color=Species))+geom_point()+theme_bw()+theme(text=element_text(size=20))
library(ggplot2)
library(lattice)
library(rgl)
# Packages
library(ggplot2)
library(lattice)
# ggplot
ggplot(iris,aes(x=Sepal.Length,y=Petal.Length,color=Species))+geom_point()+theme_bw()+theme(text=element_text(size=20))
# wireframe
wireframe(volcano, shade = TRUE,xlab='Latitude',ylab='Longitude',zlab='Altitude',aspect = c(61/87, 0.4),screen = list(z = -120, x = -45),light.source = c(0,0,10), distance = .2,shade.colors.palette = function(irr, ref, height, w = .5) grey(w * irr + (1 - w) * (1 - (1-ref)^.4)))
wireframe(volcano, shade = TRUE,xlab='Latitude',ylab='Longitude',zlab='Altitude',aspect = c(61/87, 0.4),screen = list(z = -120, x = -45),light.source = c(0,0,10), distance = .2,shade.colors.palette = function(irr, ref, height, w = .5) grey(w * irr + (1 - w) * (1 - (1-ref)^.4)))
library(ggplot2)
library(lattice)
ggplot(iris,aes(x=Sepal.Length,y=Petal.Length,color=Species))+geom_point()+theme_bw()+theme(text=element_text(size=20))
wireframe(volcano, shade = TRUE,xlab='Latitude',ylab='Longitude',zlab='Altitude',aspect = c(61/87, 0.4),screen = list(z = -120, x = -45),light.source = c(0,0,10), distance = .2,shade.colors.palette = function(irr, ref, height, w = .5) grey(w * irr + (1 - w) * (1 - (1-ref)^.4)))
I'm pretending to type somethign'=mlore action. Moving my hand.
ggplot(iris,aes(x=Sepal.Length,y=Petal.Length,color=Species))+geom_point()+theme_bw()+theme(text=element_text(size=20))
ggplot(iris,aes(x=Sepal.Length,y=Petal.Length,color=Species))+geom_point()+theme_bw()+theme(text=element_text(size=20))+geom_line()
ggplot(iris,aes(x=Sepal.Length,y=Petal.Length,color=Species))+geom_point()+theme_bw()+theme(text=element_text(size=20))+stat_smooth()
ggplot(iris,aes(x=Sepal.Length,y=Petal.Length,color=Species))+geom_point()+theme_bw()+theme(text=element_text(size=20))+stat_smooth()+ggtitle('Fisher's Iris data'')
ggplot(iris,aes(x=Sepal.Length,y=Petal.Length,color=Species))+geom_point()+theme_bw()+theme(text=element_text(size=20))+stat_smooth()+ggtitle('Fisher's Iris data')
ggplot(iris,aes(x=Sepal.Length,y=Petal.Length,color=Species))+geom_point()+theme_bw()+theme(text=element_text(size=20))+stat_smooth()+ggtitle('Fisher's Iris data')
ggplot(iris,aes(x=Sepal.Length,y=Petal.Length,color=Species))+geom_point()+theme_bw()+theme(text=element_text(size=20))+stat_smooth()+ggtitle("Fisher's Iris data")
ggplot(iris,aes(x=Sepal.Length,y=Petal.Length,color=Species))+geom_point()+theme_bw()+theme(text=element_text(size=20))+stat_smooth()+ggtitle("Fisher's Iris data")+theme(legend.location='top')
ggplot(iris,aes(x=Sepal.Length,y=Petal.Length,color=Species))+geom_point()+theme_bw()+theme(text=element_text(size=20))+stat_smooth()+ggtitle("Fisher's Iris data")+theme(legend.position='top')
help(ggplot)
Diamonds
help(diamonds)
plot(diamonds)
help(geom_point)
p <- ggplot(mtcars, aes(wt, mpg))
p + geom_point()
d <- ggplot(diamonds, aes(carat, price))
d + geom_point(alpha = 1/10)
d + geom_point(alpha = 1/20)
plot(1,1)
ggplot(df(1,1))+geom_point()
Tpying more about someting or other.
source('~/.active-rstudio-document')
BFS(10)
source('~/Desktop/Piotr_S3.R')
BFS(10)
out = BFS(10)
summary(out)
source('~/Desktop/Piotr_S3.R')
out
summary(out)
source('~/Desktop/Piotr_S3.R')
summary(out)
source('~/Desktop/Piotr_S3.R')
plot(out)
source('~/Desktop/Piotr_S3.R')
plot(out)
plot(out,type='diagnostics')
source('~/Desktop/Piotr_S3.R')
plot(out,xlim=c(1,5))
plot(out)
print.BFS_object = function(x) {
print(cbind(x$freq,x$prob))
}
print(out)
#' @export
runExample <- function() {
appDir <- system.file("shiny-examples", "myapp", package = "mypackage")
if (appDir == "") {
stop("Could not find example directory. Try re-installing `mypackage`.", call. = FALSE)
}
shiny::runApp(appDir, display.mode = "normal")
}
install.packages('shiny')
library(shiny)
setwd("~/github/simmr/inst/simmr_shiny")
library(shiny)
setwd("~/github/simmr/inst")
runApp('simmr_shiny')
runApp('simmr_shiny')
?fileInput
?sidebarParnel
?sidebarPanel
source('~/github/simmr_test_scripts/test_simmr_shiny.R')
